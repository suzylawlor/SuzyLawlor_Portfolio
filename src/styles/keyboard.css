@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap");

/* Remove margin space, apply padding to left and right, include padding in total element width*/
/* Apply Poppins font and light blue background to container*/
/* Make child elements flex items */
/* Align horizontally and vertically center*/
/* Occupy at least the full height of viewport */
.keyboard-container {
  margin: 0;
  padding: 0 10px;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: rgb(159, 202, 236);
}

/* Round the corners */
/* Set width (25px) and height (40px), colour black to resemble piano appearance */
.wrapper {
  border-radius: 20px;
  padding: 25px 40px;
  background: #141414;
}

/* text colour within header to be light gray */
/* Set header to flex container, aligning flex items vertically center and even spaced horizontally */
.wrapper header {
  color: #b2b2b2;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/* Set font size to 1.5 rem, and min-height to 0 to shrink in height as needed */
/* 'Playable Piano' */
.piano-text {
  font-size: 1.5rem;
  min-height: 0;
}

/* Create a nested flex container */
/* Align flex items vertically at the center */
header .panel {
  display: flex;
  align-items: center;
}

/* span flex items ('Volume' & 'Show Keys' text) */
/* Set font weight to 500, size to 1.19rem and create small gap between text and slider/button */
header .panel span {
  font-weight: 500;
  margin-right: 15px;
  font-size: 1.19rem;
}

/* Remove outline (focus ring) */
/* Set interactive control color to white */
.volume-slider input {
  outline: none;
  accent-color: #fff;
}

/* Set width and height of toggle space*/
/* Apply pointer to indicate interaction*/
/* Position relative to "panel keys-checkbox" container */
/* Remove the default styling, round the corners and set background colour to grey */
.keys-checkbox input {
  width: 60px;
  height: 30px;
  cursor: pointer;
  position: relative;
  appearance: none;
  border-radius: 30px;
  background: #4b4b4b;
}

/* Styling for pseudo-element (toggle button) and in false showKeys state */
/* Set width, height and colour of toggle button */
/* No content needed */
/* Positioning top edge of toggle button at the vertical center of toggle space */
/* Also apply transform to translate center position (ensure reliable vertical centering)*/
/* Set a small space between the button and the toggle edge */
/* Set border radius of toggle button inherit from toggle button space */
/* Set position to absolute, positioning it relative to "panel keys-checkbox" containing element */
/* Add transition effect for nice flow */
.keys-checkbox input::before {
  content: "";
  height: 20px;
  width: 20px;
  top: 50%;
  left: 5px;
  border-radius: inherit;
  position: absolute;
  background: #8c8c8c;
  transform: translateY(-50%);
  transition: all 0.3s ease;
}

/* Styling for pseudo-element (toggle button) and in true showKeys state */
/* Move to the right of the toggle space */
/* Change colour to white */
.keys-checkbox input:checked::before {
  left: 35px;
  background: #fff;
}

/* Container for the piano keys */
/* Make a flex container, making flex items (key) horizontal */
/* Create space top of the container */
.piano-keys {
  display: flex;
  margin-top: 40px;
}

/* Note: key class name applied through mapping function */
/* Set pointer, indicating interaction */
/* Prevent text from being selectable by user */
/* Remove bullet point from the ul item */
/* Transform text to uppercase, and set to light grey colour */
/* Set child elements to be positioned relative to position*/
.piano-keys .key {
  cursor: pointer;
  user-select: none;
  list-style: none;
  color: #a2a2a2;
  position: relative;
  text-transform: uppercase;
}

/* Set the black keys width and height to display narrower and shorter than white keys */
/* Set z-index to 1, stack over white keys */
/* right and left margins set to negative values to overlap adjacent elements */
/* Create rounded bottom corners */
/* Grey to black gradient colour */
.piano-keys .black {
  width: 44px;
  height: 140px;
  z-index: 1;
  margin: 0 -22px 0 -22px;
  border-radius: 0 0 5px 5px;
  background: linear-gradient(#333, #000);
}

/* When black keys pressed: add slight inner shadow top right, transform to top yellow, bottom orange gradient */
.piano-keys .black.active {
  box-shadow: inset -5px 5px 20px rgba(255, 255, 255, 0.1);
  background: linear-gradient(to bottom, rgb(246, 202, 24), #e75a13);
}

/* Set the white keys width and height to display wider and longer than black keys */
/* Create rounded bottom corners */
/* White to grey gradient colour, thin black border */
.piano-keys .white {
  width: 70px;
  height: 230px;
  border-radius: 8px;
  border: 1px solid #000;
  background: linear-gradient(#fff 96%, #eee 4%);
}

/* When white keys pressed: add slight inner shadow top right, transform to top light pink, bottom dark pink gradient */
.piano-keys .white.active {
  box-shadow: inset -5px 5px 20px rgba(0, 0, 0, 0.2);
  background: linear-gradient(to bottom, #faa6ff 0%, #f20089 100%);
}

/* Key values rendered from renderedKeys function */
/* Position relative to .wrapper container */
/* Whole element to be considered, letters placed slightly off from bottom of key and centered */
.piano-keys span {
  position: absolute;
  bottom: 20px;
  width: 100%;
  font-size: 1.13rem;
  text-align: center;
}

/* 'hide' key letters when showKeys false */
.piano-keys .key.hide span {
  display: none;
}

/* Media query for large smartphones, tablets (portrait) and small laptops */
/* Reduce .wrapper right/left padding to 25px (25px on all sides) */
/* Stack .header elements vertically */
/* Reduce margin bottom slighly on text and buttons */
/* Reduce width of volume slider */
/* Reduce .piano-keys margin top to 20px (from 40px) */
/* Remove 9th and 10th key (removes right block of 5 for cleaner look) */
/* Reduce black keys height (140px => 100px), width (44px => 40px), margin (0 -22px 0 -22px => 0 -20px 0 -20px)*/
/* Reduce white keys height (230px => 180px), width (70px => 60px) */
@media screen and (max-width: 815px) {
  .wrapper {
    padding: 25px;
  }
  .header {
    flex-direction: column;
  }
  header :where(h2, .panel) {
    margin-bottom: 13px;
  }
  .volume-slider input {
    max-width: 40px;
  }
  .piano-keys {
    margin-top: 20px;
  }
  .piano-keys .key:where(:nth-child(9), :nth-child(10)) {
    display: none;
  }
  .piano-keys .black {
    height: 100px;
    width: 40px;
    margin: 0 -20px 0 -20px;
  }
  .piano-keys .white {
    height: 180px;
    width: 60px;
  }
}

/* Media query for small/medium smartphones */
/* Remove right block of 5 keys */
/* Reduce white key width (70px => 50px) */
@media screen and (max-width: 615px) {
  .piano-keys .key:nth-child(13),
  .piano-keys .key:nth-child(14),
  .piano-keys .key:nth-child(15),
  .piano-keys .key:nth-child(16),
  .piano-keys .key:nth-child(17) {
    display: none;
  }
  .piano-keys .white {
    width: 50px;
  }
}
