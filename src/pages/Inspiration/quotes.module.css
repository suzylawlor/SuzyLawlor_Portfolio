/* Set container relative to document */
/* Adjust width, height and margin to be centered horizontally */
/* Transform to the right of element */
/* Apply animantion */
.glowing {
  position: relative;
  width: 50%;
  height: 50%;
  margin: 100px auto;
  transform-origin: right;
  animation: colorChangeRotate 5s linear infinite;
}

/* Even number children: transform left side of the element */
.glowing:nth-child(even) {
  transform-origin: left;
}

/* Position the span elements */
/* Positioned relative to .glowing */
/* Place --i 50px from all edges of container*/
.glowing span {
  position: absolute;
  top: calc(50px * var(--i));
  left: calc(50px * var(--i));
  bottom: calc(50px * var(--i));
  right: calc(50px * var(--i));
}

/* Decoration of span elements */
/* Positioned relative to .glowing */
/* Left set to negative value so pseudo-elements move outside container */
/* Height, width and border radius set to create large circles*/
.glowing span::before {
  content: "";
  position: absolute;
  top: 50%;
  left: -10px;
  width: 250px;
  height: 250px;
  border-radius: 50%;
}

/* Select span elements multiple of 3 + 1 (1, 4, etc) */
/* Add box shadow effect with shadow behind and multiple layers/intensities */
.glowing span:nth-child(3n + 1)::before {
  background: rgba(134, 255, 0, 1);

  box-shadow: 0 0 20px rgba(134, 255, 0, 1), 0 0 40px rgba(134, 255, 0, 1),
    0 0 60px rgba(134, 255, 0, 1), 0 0 80px rgba(134, 255, 0, 1),
    0 0 0 8px rgba(134, 255, 0, 0.1);
}

/* Select span elements multiple of 3 + 2 (2, 5, etc) */
/* Add box shadow effect with shadow behind and multiple layers/intensities */
.glowing span:nth-child(3n + 2)::before {
  background: rgba(255, 214, 0, 1);

  box-shadow: 0 0 20px rgba(255, 214, 0, 1), 0 0 40px rgba(255, 214, 0, 1),
    0 0 60px rgba(255, 214, 0, 1), 0 0 80px rgba(255, 214, 0, 1),
    0 0 0 8px rgba(255, 214, 0, 0.1);
}

/* Select span elements multiple of 3 + 3 (3, 6, etc) */
/* Add box shadow effect with shadow behind and multiple layers/intensities */
.glowing span:nth-child(3n + 3)::before {
  background: rgba(0, 226, 255, 1);

  box-shadow: 0 0 20px rgba(0, 226, 255, 1), 0 0 40px rgba(0, 226, 255, 1),
    0 0 60px rgba(0, 226, 255, 1), 0 0 80px rgba(0, 226, 255, 1),
    0 0 0 8px rgba(0, 226, 255, 0.1);
}

/* Applying animation "animate": duration 20 seconds, alternate direction, infinite repetition */
.glowing span:nth-child(3n + 1) {
  animation: animate 20s alternate infinite;
}

/* Applying animation "animate-reverse": duration 10 seconds, alternate direction, infinite repetition */
.glowing span:nth-child(3n + 2) {
  animation: animate-reverse 10s alternate infinite;
}
/* Applying animation "animate": duration 8 seconds, alternate direction, infinite repetition */
.glowing span:nth-child(3n + 3) {
  animation: animate 8s alternate infinite;
}

/* Container of quote box */
/* Position in center of viewport */
/* Set width to 400px (avoid too much line breaks of text) */
.wrapper {
  width: 400px;
  position: absolute;
  transform: translate(-50%, -50%);
  top: 50%;
  left: 50%;
}

/* Quote box styling */
/* Position relative to .wrapper */
/* Don't exceed 900px and prevent overflow (large quotes) */
/* Initial colour/box shadow green shades, then rotate through colour wheel, no speed fluctuations */
/* Round corners */
/* Center text and horizontally center element */
.container {
  position: relative;
  overflow: hidden;
  max-width: 800px;
  background-color: none;
  padding: 50px 40px;
  box-shadow: 0 20px 65px #15732b;
  border-radius: 8px;
  text-align: center;
  margin: 0 auto;
  animation: colorChange 5s linear infinite;
}

/* Styling quote text */
/* small font and line height (consider long quotes) */
.container p {
  line-height: 2;
  color: #4d9e1e;
  font-size: 18px;
}

/* Styling author text */
/* Create visually pleasing space between quote text and button */
.container h3 {
  color: #4d9e1e;
  margin: 20px 0px 60px 0;
  font-weight: 600;
}

/* Styling button */
/* Create rounded rectangular shape */
/* Text colour to start as initial green and change with container animation */
/* Indicate interaction with pointer */
.container button {
  background-color: #ffffff;
  border: none;
  padding: 15px 45px;
  border-radius: 5px;
  font-size: 18px;
  font-weight: 600;
  color: #4d9e1e;
  cursor: pointer;
}

/* When no quote loaded: padding 0 top and bottom, 20px left and right */
.noLoadDisplay {
  padding: 0 20px;
}

/* Original colour at initial state */
/* Go through colour wheel */
/* Rotate to enhance movement */
@keyframes colorChangeRotate {
  0% {
    filter: hue-rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    filter: hue-rotate(360deg);
    transform: rotate(360deg);
  }
}

/* Original colour at initial state */
/* Go through colour wheel */
@keyframes colorChange {
  0% {
    filter: hue-rotate(0deg);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}

/* Start of animation, rotate 180 */
/* Halfway, no rotation */
/* End of animation, rotate 360 (180 back to starting point)*/
@keyframes animate {
  0% {
    transform: rotate(180deg);
  }
  50% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Start of animation, rotate 360 */
/* Halfway, rotate 180 */
/* End of animation, no rotation*/
@keyframes animate-reverse {
  0% {
    transform: rotate(360deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

/* Media query for smartphones */
/* Expand to fill the entire width */
@media (max-width: 700px) {
  .glowing {
    min-width: 100%;
  }
}
